---
import type { HTMLAttributes } from 'astro/types';
import { tv, type VariantProps } from 'tailwind-variants';

type Props = HTMLAttributes<'div'> & VariantProps<typeof badgeVariants>;

// prettier-ignore
export const badgeVariants = tv({
  base: 'inline-flex items-center justify-center gap-1.5 rounded-full motion-safe:transition-colors',
  defaultVariants: { color: 'primary', size: 'md' },
  variants: {
    outline: { true: 'border !bg-transparent' },
    color: {
      primary: 'bg-surface-primary text-foreground-primary [&:hover[href]]:bg-surface-primary/80',
      secondary: 'bg-surface-secondary text-foreground-secondary [&:hover[href]]:bg-surface-secondary/80',
      accent: 'bg-surface-accent text-foreground-accent [&:hover[href]]:bg-surface-accent/80',
      neutral: 'bg-surface-neutral text-foreground-neutral [&:hover[href]]:bg-surface-neutral/80',
      danger: 'bg-surface-danger text-foreground-danger [&:hover[href]]:bg-surface-danger/80',
    },
    size: {
      sm: 'px-2 h-5 text-xs',
      md: 'px-2.5 h-6 text-sm',
      lg: 'px-4 h-7 text-base',
    },
  },
  compoundVariants: [
    { outline: true, color: 'primary', class: 'border-surface-primary text-foreground-primary-outline [&:hover[href]]:bg-surface-primary/20' },
    { outline: true, color: 'secondary', class: 'border-surface-secondary text-foreground-secondary-outline [&:hover[href]]:bg-surface-secondary/20' },
    { outline: true, color: 'accent', class: 'border-surface-accent text-foreground-accent-outline [&:hover[href]]:bg-surface-accent/20' },
    { outline: true, color: 'neutral', class: 'border-surface-neutral text-foreground-neutral-outline [&:hover[href]]:bg-surface-neutral/20' },
    { outline: true, color: 'danger', class: 'border-surface-danger text-foreground-danger-outline [&:hover[href]]:bg-surface-danger/20' }, 
  ],
});

const { class: className, color, outline, size, ...props } = Astro.props;
---

<div {...props} class={badgeVariants({ color, outline, size, className })}><slot /></div>
