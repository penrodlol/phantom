---
import { getProps, render } from '@phantom/core/component';
import type { HTMLAttributes } from 'astro/types';
import { twMerge } from 'tailwind-merge';

type Props = HTMLAttributes<'div'> & { activation?: 'automatic' | 'manual'; defaultValue?: string };

const { class: className, defaultValue, activation = 'automatic', ...props } = Astro.props;

const html = render(await Astro.slots.render('default'), {
  '[role=tab]': {
    id: ({ id, dataValue }) => `${id}-tab-${dataValue}`,
    tabindex: ({ dataValue }) => (defaultValue === dataValue ? 0 : -1),
    ariaControls: ({ id, dataValue }) => `${id}-panel-${dataValue}`,
    ariaSelected: ({ first, dataValue }) => defaultValue === dataValue || (first && !defaultValue),
  },
  '[role=tabpanel]': {
    id: ({ id, dataValue }) => `${id}-panel-${dataValue}`,
    ariaLabelledby: ({ id, dataValue }) => `${id}-tab-${dataValue}`,
    ariaHidden: ({ first, dataValue }) => defaultValue !== dataValue && !(first && !defaultValue),
  },
});

const active = defaultValue ?? getProps(html, '[role=tab]:first-of-type').dataValue;
---

<div
  {...props}
  x-data={`{  active: "${active}", activation: "${activation}" }`}
  class={twMerge('w-full', className)}
  set:html={html}
/>
