---
import type { ComponentProps, HTMLAttributes } from 'astro/types';
import { Code as AstroCodeComponent } from 'astro:components';
import { Check, Clipboard } from 'lucide-astro';
import { twMerge } from 'tailwind-merge';
import Button from '../../button.astro';

type Props = HTMLAttributes<'figure'> & {
  title?: string;
  code?: ComponentProps<typeof AstroCodeComponent>['code'];
  lang?: ComponentProps<typeof AstroCodeComponent>['lang'];
};

const { class: className, title, code, lang, ...props } = Astro.props;
---

<figure
  {...props}
  x-data="{ copied: false }"
  class={twMerge(
    'relative grid rounded border text-sm',
    '[&_figcaption]:bg-surface-2 [&_figcaption]:rounded-t [&_figcaption]:border-b [&_figcaption]:px-4 [&_figcaption]:py-2',
    '[&_pre]:scrollbar-thin [&_code]:font-sans [&_code]:text-sm [&_pre]:overflow-auto [&_pre]:rounded [&_pre]:p-4',
    className,
  )}
>
  {title && <figcaption>{title}</figcaption>}
  <Button
    color="ghost"
    size="icon"
    aria-label="Copy to clipboard"
    class="text-foreground-2 absolute right-0 top-px z-10 *:size-3.5"
    @click="navigator.clipboard.writeText($root.lastElementChild.textContent.trim()).then(() => copied = true)"
    @mouseleave.debounce.1000ms="copied && (copied = false)"
  >
    <Clipboard aria-hidden x-show="!copied" />
    <Check aria-hidden x-show="copied" />
  </Button>
  <slot />
  <!-- @ts-ignore -->
  {code && <AstroCodeComponent {lang} {code} theme="css-variables" />}
</figure>
